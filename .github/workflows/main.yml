name: CI

on: [push, pull_request]

jobs:
  build:

    runs-on: windows-2022

    strategy:
      matrix:
        configuration: [Debug, Release]
        target-framework: [net48, netcoreapp3.1, net6.0-windows]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Python environment
      uses: actions/setup-python@v3
      with:
        cache: 'pip'
        cache-dependency-path: 'ManualGenerator/requirements.txt'

    - name: Restore Python packages
      run: |
        python -m pip install -U pip
        python -m pip install -r ManualGenerator/requirements.txt

    - name: Cache NuGet packages
      uses: actions/cache@v3.0.2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ matrix.target-framework }}-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ matrix.target-framework }}-
          ${{ runner.os }}-nuget-

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Restore NuGet packages
      run: msbuild -t:restore

    - name: Build
      run: >
        msbuild ThScoreFileConverter.sln /m /verbosity:minimal
        /p:Configuration=${{ matrix.configuration }}
        /p:TargetFrameworks=${{ matrix.target-framework }}

    - name: Run FOSSA scan and upload build data
      env:
        FOSSA_API_KEY: 546ea14e5b1c4a901201f2d1cfc44a83   # Push only API token
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        iex ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.ps1'))
        fossa analyze
        fossa test
      if: matrix.configuration == 'Debug'

    - name: Generate coverage report
      run: >
        dotnet test ThScoreFileConverterTests
        /p:Configuration=${{ matrix.configuration }}
        /p:TargetFrameworks=${{ matrix.target-framework }}
        /p:CollectCoverage=true
        /p:CoverletOutputFormat=opencover
        /p:CoverletOutput=coverage.xml
      if: matrix.configuration == 'Debug'

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ThScoreFileConverterTests/coverage.${{ matrix.target-framework }}.xml
      if: matrix.configuration == 'Debug'

    - name: Collect artifacts
      run: CollectArtifacts.bat ${{ matrix.configuration }} ${{ matrix.target-framework }}
      shell: cmd
      if: matrix.configuration == 'Release'

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ThScoreFileConverter.${{ matrix.target-framework }}
        path: publish\${{ matrix.target-framework }}
      if: matrix.configuration == 'Release'
