<#@ assembly name="System.Core" #>
<#@ assembly name="$(TargetPath)" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="ThScoreFileConverter.Extensions" #>
<#@ import namespace="ThScoreFileConverter.Models" #>
<#@ import namespace="ThScoreFileConverter.Models.Th15" #>
<#
    var levels = Utils.GetEnumerable<Level>()
        .ToDictionary(level => level.ToShortName(), level => level.ToString());
    var levelsWithTotal = Utils.GetEnumerable<LevelWithTotal>()
        .ToDictionary(level => level.ToShortName(), level => level.ToString());

    var levelKeyTotal = LevelWithTotal.Total.ToShortName();
    var levelKeyOrderTotalFirst = levelsWithTotal.Keys.TakeLast(1).Concat(levelsWithTotal.Keys.SkipLast(1));
    var levelKeyOrderTotalLast = levelsWithTotal.Keys;

    var levelsPractice = levels.Where(pair => pair.Key != Level.Extra.ToShortName());

    var characters = new List<(Chara chara, string name)>
    {
        (Chara.Reimu,  "博麗 霊夢"),
        (Chara.Marisa, "霧雨 魔理沙"),
        (Chara.Sanae,  "東風谷 早苗"),
        (Chara.Reisen, "鈴仙・優曇華院・イナバ"),
    }.ToDictionary(pair => pair.chara.ToShortName(), pair => pair.name);

    var charactersWithTotal = new List<(CharaWithTotal chara, string name)>
    {
        (CharaWithTotal.Reimu,  "博麗 霊夢"),
        (CharaWithTotal.Marisa, "霧雨 魔理沙"),
        (CharaWithTotal.Sanae,  "東風谷 早苗"),
        (CharaWithTotal.Reisen, "鈴仙・優曇華院・イナバ"),
        (CharaWithTotal.Total,  "全主人公合計"),
    }.ToDictionary(pair => pair.chara.ToShortName(), pair => pair.name);

    var charaKeyTotal = CharaWithTotal.Total.ToShortName();
    var charaKeyOrderTotalFirst = charactersWithTotal.Keys.TakeLast(1).Concat(charactersWithTotal.Keys.SkipLast(1));
    var charaKeyOrderTotalLast = charactersWithTotal.Keys;

    var stages = new List<(Stage stage, string name)>
    {
        (Stage.One,   "Stage 1"),
        (Stage.Two,   "Stage 2"),
        (Stage.Three, "Stage 3"),
        (Stage.Four,  "Stage 4"),
        (Stage.Five,  "Stage 5"),
        (Stage.Six,   "Stage 6"),
        (Stage.Extra, "Extra"),
    }.ToDictionary(pair => pair.stage.ToShortName(), pair => pair.name);

    var stagesWithTotal = new List<(StageWithTotal stage, string name)>
    {
        (StageWithTotal.One,   "Stage 1"),
        (StageWithTotal.Two,   "Stage 2"),
        (StageWithTotal.Three, "Stage 3"),
        (StageWithTotal.Four,  "Stage 4"),
        (StageWithTotal.Five,  "Stage 5"),
        (StageWithTotal.Six,   "Stage 6"),
        (StageWithTotal.Extra, "Extra"),
        (StageWithTotal.Total, "Total"),
    }.ToDictionary(pair => pair.stage.ToShortName(), pair => pair.name);

    var stageKeyTotal = StageWithTotal.Total.ToShortName();
    var stageKeyOrderTotalFirst = stagesWithTotal.Keys.TakeLast(1).Concat(stagesWithTotal.Keys.SkipLast(1));
    var stageKeyOrderTotalLast = stagesWithTotal.Keys;

    var stagesPractice = stages.Where(pair => pair.Key != Stage.Extra.ToShortName());

    var cardsPerLevel = new List<(Level level, int numCards)>
    {
        (Level.Easy,    26),
        (Level.Normal,  26),
        (Level.Hard,    27),
        (Level.Lunatic, 27),
        (Level.Extra,   13),
    }.ToDictionary(pair => pair.level.ToShortName(), pair => pair.numCards);

    var cardsPerStage = new List<(Stage stage, int numCards)>
    {
        (Stage.One,   10),
        (Stage.Two,   12),
        (Stage.Three, 20),
        (Stage.Four,  16),
        (Stage.Five,  20),
        (Stage.Six,   28),
        (Stage.Extra, 13),
    }.ToDictionary(pair => pair.stage.ToShortName(), pair => pair.numCards);

    var numCards = cardsPerLevel.Values.Sum();

    var gameModes = new List<(GameMode mode, string name)>
    {
        (GameMode.Pointdevice, "完全無欠モード"),
        (GameMode.Legacy,      "レガシーモード"),
    }.ToDictionary(pair => pair.mode.ToShortName(), pair => pair.name);
#>