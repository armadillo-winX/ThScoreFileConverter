<#@ assembly name="System.Core" #>
<#@ assembly name="$(TargetPath)" #>
<#@ include file="footer.ttinclude" once="true" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="ThScoreFileConverter.Extensions" #>
<#@ import namespace="ThScoreFileConverter.Helpers" #>
<#@ import namespace="ThScoreFileConverter.Models" #>
<#@ import namespace="ThScoreFileConverter.Models.Th06" #>
<#
    var title = "東方紅魔郷";

    var levels = EnumHelper<Level>.Enumerable.ToDictionary(level => level.ToShortName(), level => level.ToString());

    var levelsPractice = levels.Where(pair => pair.Key != Level.Extra.ToShortName());

    var characters = new List<(Chara chara, string name)>
    {
        (Chara.ReimuA,  "博麗 霊夢（霊）"),
        (Chara.ReimuB,  "博麗 霊夢（夢）"),
        (Chara.MarisaA, "霧雨 魔理沙（魔）"),
        (Chara.MarisaB, "霧雨 魔理沙（恋）"),
    }.ToDictionary(pair => pair.chara.ToShortName(), pair => pair.name);

    var stages = new List<(Stage stage, string name)>
    {
        (Stage.One,   "Stage 1"),
        (Stage.Two,   "Stage 2"),
        (Stage.Three, "Stage 3"),
        (Stage.Four,  "Stage 4"),
        (Stage.Five,  "Stage 5"),
        (Stage.Six,   "Stage 6"),
        (Stage.Extra, "Extra"),
    }.ToDictionary(pair => pair.stage.ToShortName(), pair => pair.name);

    var stagesWithTotal = new List<(StageWithTotal stage, string name)>
    {
        (StageWithTotal.One,   "Stage 1"),
        (StageWithTotal.Two,   "Stage 2"),
        (StageWithTotal.Three, "Stage 3"),
        (StageWithTotal.Four,  "Stage 4"),
        (StageWithTotal.Five,  "Stage 5"),
        (StageWithTotal.Six,   "Stage 6"),
        (StageWithTotal.Extra, "Extra"),
        (StageWithTotal.Total, "Total"),
    }.ToDictionary(pair => pair.stage.ToShortName(), pair => pair.name);

    var stageKeyTotal = StageWithTotal.Total.ToShortName();
    var stageKeyOrderTotalFirst = stagesWithTotal.Keys.TakeLast(1).Concat(stagesWithTotal.Keys.SkipLast(1));
    var stageKeyOrderTotalLast = stagesWithTotal.Keys;

    var stagesPractice = stages.Where(pair => pair.Key != Stage.Extra.ToShortName());

    var cardsPerStage = new List<(Stage stage, int numCards)>
    {
        (Stage.One,    3),
        (Stage.Two,    4),
        (Stage.Three,  7),
        (Stage.Four,  18),
        (Stage.Five,   8),
        (Stage.Six,   11),
        (Stage.Extra, 13),
    }.ToDictionary(pair => pair.stage.ToShortName(), pair => pair.numCards);

    var numCards = cardsPerStage.Values.Sum();
#>