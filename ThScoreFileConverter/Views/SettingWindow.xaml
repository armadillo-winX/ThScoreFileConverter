<Window x:Class="ThScoreFileConverter.Views.SettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xb="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
        xmlns:c="clr-namespace:ThScoreFileConverter.Commands"
        xmlns:i="clr-namespace:ThScoreFileConverter.Interactivity"
        xmlns:m="clr-namespace:ThScoreFileConverter.Models"
        lex:LocalizeDictionary.DesignCulture="ja-JP"
        lex:LocalizeDictionary.Provider="{x:Static m:LocalizationProvider.Instance}"
        md:DialogServiceViews.IsRegistered="True"
        FocusManager.FocusedElement="{x:Reference Name=OkButton}"
        Style="{StaticResource DialogStyleKey}"
        Title="{Binding Title}"
        UseLayoutRounding="True"
        WindowStartupLocation="CenterOwner">

    <Window.InputBindings>
        <KeyBinding Command="{x:Static c:CloseWindowCommand.Instance}"
                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                    Key="Escape"/>
    </Window.InputBindings>

    <StackPanel Margin="10"
                Style="{StaticResource VerticalStackPanelStyle}"
                MinWidth="340">
        <GroupBox Header="{lex:Loc ViewsSettingWindowGroupBoxLanguage}">
            <ComboBox DisplayMemberPath="NativeName"
                      ItemsSource="{Binding MergedAvailableCultures, Source={x:Static lex:LocalizeDictionary.Instance}}"
                      SelectedItem="{Binding Culture}"/>
        </GroupBox>

        <Separator/>

        <GroupBox Header="{lex:Loc ViewsSettingWindowGroupBoxOutputFormatting}">
            <CheckBox Content="{lex:Loc ViewsSettingWindowCheckBoxOutputNumberGroupSeparator}"
                      IsChecked="{Binding OutputNumberGroupSeparator.Value}"/>
        </GroupBox>

        <Separator/>

        <GroupBox Header="{lex:Loc ViewsSettingWindowGroupBoxCharacterEncoding}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Label Content="{lex:Loc ViewsSettingWindowLabelInputEncoding}"
                       HorizontalAlignment="Left"
                       Target="{Binding ElementName=InputEncodingsComboBox, Mode=OneWay}"
                       VerticalAlignment="Center"/>
                <ComboBox x:Name="InputEncodingsComboBox"
                          Grid.Column="1"
                          DisplayMemberPath="Value"
                          ItemsSource="{Binding InputEncodings}"
                          SelectedValue="{Binding InputCodePageId.Value, Mode=TwoWay}"
                          SelectedValuePath="Key"
                          VerticalAlignment="Center"/>
                <Label Grid.Row="1"
                       Content="{lex:Loc ViewsSettingWindowLabelOutputEncoding}"
                       HorizontalAlignment="Left"
                       Target="{Binding ElementName=OutputEncodingsComboBox, Mode=OneWay}"
                       VerticalAlignment="Center"/>
                <ComboBox x:Name="OutputEncodingsComboBox"
                          Grid.Column="1"
                          Grid.Row="1"
                          DisplayMemberPath="Value"
                          ItemsSource="{Binding OutputEncodings}"
                          SelectedValue="{Binding OutputCodePageId.Value, Mode=TwoWay}"
                          SelectedValuePath="Key"
                          VerticalAlignment="Center"/>
            </Grid>
        </GroupBox>

        <Separator/>

        <Button x:Name="OkButton"
                Content="{lex:Loc ViewsSettingWindowButtonOk}"
                HorizontalAlignment="Center"
                IsDefault="True">
            <xb:Interaction.Triggers>
                <xb:EventTrigger EventName="Click">
                    <xb:InvokeCommandAction Command="{x:Static c:CloseWindowCommand.Instance}"
                                           CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                </xb:EventTrigger>
            </xb:Interaction.Triggers>
        </Button>
    </StackPanel>
</Window>
